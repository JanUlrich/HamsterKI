/*class*/
/**
 * Die Karte stellt ein Spielfeld mit Variabler Größe dar.
 * Die Felder der Karte können Editiert werden.
 * Quasi die Karte die der Hamster (die AI das Hamsters) dabei hat und alle aufgedeckten Felder darauf vermerkt.
 */
public class Karte {
	private ZweiDimensionalesArray<Feld> karte;
	
	public Karte() {
		karte = new ZweiDimensionalesArray<Feld>();
	}
	
	public void setFeld(int reihe, int spalte, Feld feld) {
		karte.setFeld(new Position(spalte, reihe), feld);
	}
		
	public Feld getFeld(int reihe, int spalte){
		Position pos = new Position(spalte, reihe);
		return getFeld(pos);
	}
	
	public Feld getFeld(Position pos){
		if(karte.feldBelegt(pos)) {
			return karte.getFeld(pos);
		}
		Feld ret = new Feld();
		karte.setFeld(pos, ret);
		return ret;
	}
	
	public void update(Karte informationen){
		
	}
	
	/**
	 * Baut ein Spielfeld aus den momentan vorhandenen Informationen
	 */
	public Spielfeld createSpielfeld(){
		//int height = minReihe;
		//Spielfeld ret = new Spielfeld(width, height);
		ZweiDimensionalesArray<Feld> felder = new ZweiDimensionalesArray<Feld>();
		int minX = karte.getMinSpalte();
		int minY = karte.getMinReihe();
		
		for(int x = minX;x<=karte.getMaxSpalte();x++)for(int y = minY;y<=karte.getMaxReihe();y++){
			Position pos = new Position(x,y);
			Feld feld = this.getFeld(pos);
			if(feld == null){
				feld = new Feld(0.0, 0.25);
			}
			felder.setFeld(new Position(x-minX,y-minY),feld);
		}
		Spielfeld ret = new Spielfeld(felder);
		return ret;
	}
    
    /**
     * Gibt das Feld in der angegebenen Richtung zurück
     * @return Das Feld in der angegebenen Richtung
     */
    public Feld getFeldInRichtung(Position position, int richtung) {
    	int reihe = position.y + (richtung - 1) % 2;
    	int spalte = position.x + (richtung * -1 + 2) % 2;
    	
    	return getFeld(reihe, spalte);
    }
	
}
